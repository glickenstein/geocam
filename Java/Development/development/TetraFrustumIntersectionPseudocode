
PSEUDOCODE FOR INTERSECTING POLYHEDRON WITH 3D FRUSTUM
Notation:  Frustums have Rays and Planes,  Polyehdra have Verts, Edges, and Faces


VARIABLES:
-----------------
<List of Verts> OmitVert
<List of Verts> Hull

For each ray R:
	<list of Faces> OmitFace_R
	<list of Edges> OmitEdge_R

For each plane P:  
	<List of Verts> OmitVert_P
	<List of Edges> OmitEdge_P


ALGORITHM:
-----------------
for each ray R{

	for each vert V,
 	if ( d(V,R) < eps ){

		add V to Hull
		add V.localEdges to OmitEdge_R
		add V.localFaces to OmitFace_R
		add V.localEdges to OmitEdge_{R.localPlanes}
		add V to OmitVert_{R.localPlanes}
		add V to OmitVert
	}

	for each edge E,
	if ( d(E,R) < eps ) and (E \notin OmitEdge_R){

		add {E \cap R} to Hull
		add E.localFaces to OmitFace_R
		add E to OmitEdge_{R.localPlanes}
	}

	for each face F,
	if ( d(F,R) < eps ) and (F \notin OmitFace_R){

		add {F \cap R} to Hull
	}
}

for each plane P{

	for each vert V{
	if ( d(V,P) < eps ) and (V \notin OmitVert_P){

		add V to Hull
		add V.localEdges to OmitEdge_P
		add V to OmitVert
	}

	for each edge E{
	if ( d(E,P) < eps ) and (E \notin OmitEdge_P){

		add {E \cap P} to Hull
	}
}

for each vert V,
if ( V \in Frustum ) and (V \notin OmitVert){

	add V to Hull
}

return Hull